function [c_p,c_l,c_pl] = correspondences_RubikCube( )

% Model dimensions
% TODO: Scale to real measurements? Using BnB with similarity
global s;
% s = 1/0.5385943666;
s = 0.5385943666;
% s = 1;

% Point-to-Plane correspondences
[x,y,n,m] = data_point2plane( );
c_pl = repmat(Point2Plane(),1,m);
for i=1:m
  plane = Plane(y(:,i),n(:,i));
  point = Point(x(:,i));
  c_pl(i) = Point2Plane(point,plane);
end

% Point-to-Line correspondences
[x,y,v,m] = data_point2line( );
c_l = repmat(Point2Line(),1,m);
for i=1:m % for each correspondence
  line = Line(y(:,i),v(:,i));
  point = Point(x(:,i));
  c_l(i) = Point2Line(point,line);
end

% Point-to-Point correspondences
[x,y,m] = data_point2point( );
c_p = repmat(Point2Point(),1,m);
for i=1:m % for each correspondence
  p1 = Point(y(:,i));
  p2 = Point(x(:,i));
  
  % store new object
  c_p(i) = Point2Point(p2,p1);
end

end

function [x,y,n,m] = data_point2plane( )

global s;

% Number of correspondences
m = 9;
% Plane normals
n = [...
        1 0 0; ...
        1 0 0; ...
        1 0 0; ...
        0 0 1; ...
        0 0 1; ...
        0 1 0; ...
        0 1 0; ...
        0 1 0; ...
        0 0 1]';

% Plane points
y = [...
        0 0 0; ...
        0 0 0; ...
        0 0 0; ...
        0 0 3; ...
        0 0 3; ...
        0 0 0; ...
        0 0 0; ...
        0 0 0; ...
        0 0 3]';

% Points measured in the planes
x = s*[...
        28.3532 19.5083 4.4695; ...
        28.3006 19.6491 1.2029; ...
        26.9513 22.1902 1.1822; ...
        24.1937 17.3746 5.4019; ...
        24.1391 21.1142 5.4047; ...
        25.0772 22.6204 4.2847; ...
        22.2571 21.0946 1.1931; ...
        25.6702 22.9415 1.1735; ...
        27.1243 18.9935 5.4277]';

end

function [x,y,v,m] = data_point2line( )

global s;

% Number of correspondences
m = 2;
% Unit direction vectors
v = [0 0 1; ...
        0 0 1]';
% Points in the lines
y = [0 2 0; ...
        0 1 0]';
% Points measured in the lines
x = s*[...
       28.1031 19.9484 4.1263; ...
        27.1969 21.6155 4.2737]';

end

function [x,y,m] = data_point2point( )

global s;

% Number of correspondences
m = 3;
% Reference points (in the model)
y = [0 3 3; ...
        0 0 3; ...
        3 0 3]';...
% Measured points 
x = s*[...
    28.8964 18.3203 5.3836; ...
    26.2898 23.2155 5.3759; ...
    21.4340 20.5969 5.3344]'; ...

end
function [c_p,c_l,c_pl] = correspondences_SpaceStation( )
% [c_p,c_l,c_pl] = correspondences_SpaceStation( )

% Model dimensions
% TODO: Scale to real measurements? Using BnB with similarity
global d;
global d2;
global s;
d  = 2/31;
d2 = 5/31;
% s = 1/0.3264;
s = 0.3264;

% Point-to-Plane correspondences
[x,y,n,m] = data_point2plane( );
c_pl = repmat(Point2Plane(),1,m);
for i=1:m
  plane = Plane(y(:,i),n(:,i));
  point = Point(x(:,i));
  c_pl(i) = Point2Plane(point,plane);
end

% Point-to-Line correspondences
[x,y,v,m] = data_point2line( );
c_l = repmat(Point2Line(),1,m);
for i=1:m % for each correspondence
  line = Line(y(:,i),v(:,i));
  point = Point(x(:,i));
  c_l(i) = Point2Line(point,line);
end

% Point-to-Point correspondences
[x,y,m] = data_point2point( );
c_p = repmat(Point2Point(),1,m);
for i=1:m % for each correspondence
  p1 = Point(y(:,i));
  p2 = Point(x(:,i));
  
  % store new object
  c_p(i) = Point2Point(p2,p1);
end

end

function [x,y,n,m] = data_point2plane( )

global d;
global d2;
global s;

% Number of correspondences
m = 27;
% Plane normals
n = [...
  -1/sqrt(2) 0 1/sqrt(2); ...
  -1/sqrt(2) 0 1/sqrt(2); ...
  -1/sqrt(2) 0 1/sqrt(2); ...
  0 -1/sqrt(2) 1/sqrt(2); ...
  0 -1/sqrt(2) 1/sqrt(2); ...
  0 -1/sqrt(2) 1/sqrt(2); ...
  1/sqrt(2) 0 1/sqrt(2); ...
  1/sqrt(2) 0 1/sqrt(2); ...
  1/sqrt(2) 0 1/sqrt(2); ...
  0 1/sqrt(2) 1/sqrt(2); ...
  0 1/sqrt(2) 1/sqrt(2); ...
  0 1/sqrt(2) 1/sqrt(2); ...
  0 0 1; ...
  0 0 1; ...
  0 0 1; ...
  -1 0 0; ...
  -1 0 0; ...
  -1 0 0; ...
  1 0 0; ...
  1 0 0; ...
  1 0 0; ...
  0 -1 0; ...
  0 -1 0; ...
  0 -1 0; ...
  0 1 0; ...
  0 1 0; ...
  0 1 0; ...
  ]';

% Plane points
y = [...
  0 0 d2; ...
  0 0 d2; ...
  0 0 d2; ...
  1+d -1-d d2; ...
  1+d -1-d d2; ...
  1+d -1-d d2; ...
  3+2*d 0 d2; ...
  3+2*d 0 d2; ...
  3+2*d 0 d2; ...
  1+d 2+d d2; ...
  1+d 2+d d2; ...
  1+d 2+d d2; ...
  1+d 1 1+d; ...
  1+d 1 1+d; ...
  1+d 1 1+d; ...
  1+d 0 0; ...
  1+d 0 0; ...
  1+d 0 0; ...
  2+d 0 0; ...
  2+d 0 0; ...
  2+d 0 0; ...
  1+d 0 0; ...
  1+d 0 0; ...
  1+d 0 0; ...
  1+d 1 0; ...
  1+d 1 0; ...
  1+d 1 0 ...
  ]';

% Points measured in the planes
x = s*[...
  35.7523 14.9130 2.3913 ; ...
  35.9119 16.8331 2.4082 ; ...
  33.9933 15.7678 4.2237 ; ...
  32.9470 18.7614 3.8901 ; ...
  32.6966 20.3653 2.2209 ; ...
  30.9807 20.0255 2.6940 ; ...
  29.1302 17.4000 3.8614 ; ...
  27.2992 16.3562 2.0987 ; ...
  29.0671 15.3619 3.9770 ; ...
  30.6120 13.8958 4.1509 ; ...
  32.4087 13.7291 4.1239 ; ...
  32.3165 12.0553 2.3290 ; ...
  32.5733 15.3796 4.5553 ; ...
  30.8647 17.2839 4.5728 ; ...
  32.8226 16.9062 4.5509 ; ...
  33.3890 18.3514 3.3161 ; ...
  33.4758 19.5356 2.0612 ; ...
  33.0059 12.2761 2.1305 ; ...
  30.3224 18.8118 3.1844 ; ...
  30.3899 19.8053 1.8780 ; ...
  29.9569 13.4604 2.3450 ; ...
  35.1031 17.5877 2.1335 ; ...
  34.3660 17.6231 2.4881 ; ...
  29.3501 17.9471 2.4718 ; ...
  33.9035 14.5054 3.5535 ; ...
  34.9201 14.4384 2.2512 ; ...
  29.1911 14.8704 3.5860  ...
  ]';

end

function [x,y,v,m] = data_point2line( )

global d;
global d2;
global s;

% Number of correspondences
m = 12;
% Unit direction vectors
v = [...
  0 0 1; ...
  0 0 1; ...
  0 0 1; ...
  0 0 1; ...
  0 0 1; ...
  0 0 1; ...
  0 0 1; ...
  0 0 1; ...
  0 0 1; ...
  0 0 1; ...
  0 0 1; ...
  0 0 1]';
% Points in the lines
y = [...
  1+d 0 0; ...
  1+d 0 0; ...
  1+d 0 0; ...
  2+d 0 0; ...
  2+d 0 0; ...
  2+d 0 0; ...
  2+d 1 0; ...
  2+d 1 0; ...
  2+d 1 0; ...
  1+d 1 0; ...
  1+d 1 0; ...
  1+d 1 0 ...
  ]';
% Points measured in the lines
x = s*[...
  33.3659 17.6175 4.0228 ; ...
  33.3439 17.6286 3.2425 ; ...
  33.3383 17.6318 2.1417 ; ...
  30.3122 17.8735 4.0483 ; ...
  30.2985 17.8840 3.1541 ; ...
  30.3023 17.8896 1.9503 ; ...
  30.0770 14.7661 3.9396 ; ...
  30.0549 14.7578 2.5215 ; ...
  30.0418 14.7579 1.8449 ; ...
  33.1576 14.5466 3.7905 ; ...
  33.1607 14.5596 2.9585 ; ...
  33.1468 14.5772 1.7961  ...
  ]';

end

function [x,y,m] = data_point2point( )

global d;
global d2;
global s;

% Number of correspondences
m = 10;
% Reference points (in the model)
y = [...
  0 0 d2; ...
  1+d -1-d d2; ...
  2+d -1-d d2; ...
  3+2*d 0 d2; ...
  3+2*d 1 d2; ...
  2+d 2+d d2; ...
  1+d 2+d d2; ...
  0 1 d2; ...
  1+d-d2 0 1+d; ...
  2+d+d2 1 1+d; ...
  ]';
% Measured points 
x = s*[...
  36.5888 17.4763 1.7289 ; ...
  33.5409 20.8242 1.6484 ; ...
  30.4845 21.0278 1.6225 ; ...
  27.0145 18.0106 1.6042 ; ...
  26.8720 15.0103 1.7909 ; ...
  29.8630 11.6156 1.6632 ; ...
  32.9191 11.4212 1.6810 ; ...
  36.3578 14.3407 1.7290 ; ...
  33.8774 17.6196 4.4838 ; ...
  29.5339 14.9245 4.4780 ; ...
  ]';

end